class 'Crosshair'

function Crosshair:__init()
	self.crosshairICO = Image.Create( AssetLocation.Base64, "iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAABN2lDQ1BBZG9iZSBSR0IgKDE5OTgpAAAokZWPv0rDUBSHvxtFxaFWCOLgcCdRUGzVwYxJW4ogWKtDkq1JQ5ViEm6uf/oQjm4dXNx9AidHwUHxCXwDxamDQ4QMBYvf9J3fORzOAaNi152GUYbzWKt205Gu58vZF2aYAoBOmKV2q3UAECdxxBjf7wiA10277jTG+38yH6ZKAyNguxtlIYgK0L/SqQYxBMygn2oQD4CpTto1EE9AqZf7G1AKcv8ASsr1fBBfgNlzPR+MOcAMcl8BTB1da4Bakg7UWe9Uy6plWdLuJkEkjweZjs4zuR+HiUoT1dFRF8jvA2AxH2w3HblWtay99X/+PRHX82Vun0cIQCw9F1lBeKEuf1UYO5PrYsdwGQ7vYXpUZLs3cLcBC7dFtlqF8hY8Dn8AwMZP/fNTP8gAAAAJcEhZcwAACxMAAAsTAQCanBgAAAiVaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0OCA3OS4xNjQwMzYsIDIwMTkvMDgvMTMtMDE6MDY6NTcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjEuMCAoV2luZG93cykiIHhtcDpDcmVhdGVEYXRlPSIyMDIwLTAzLTA4VDIyOjU4OjQ1KzAzOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIwLTAzLTIxVDE3OjA2OjI4KzAzOjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMC0wMy0yMVQxNzowNjoyOCswMzowMCIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YTc0ZmJjNjctNWYwYi01YTQ3LWE4YzUtNmViN2M1NmQ2YWI4IiB4bXBNTTpEb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6NmZiNjFiOWEtNDcyYy0yNDQ4LWI3ZGMtM2ZlZTMyNmY0YTY1IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NTJiY2MzYTQtYzY5OC0yMjQxLWJlOWQtNzY1MDdlNTI5ZTY4IiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo1MmJjYzNhNC1jNjk4LTIyNDEtYmU5ZC03NjUwN2U1MjllNjgiIHN0RXZ0OndoZW49IjIwMjAtMDMtMDhUMjI6NTg6NDUrMDM6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMS4wIChXaW5kb3dzKSIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YzQ3NDU5ZmMtNzM4NC03ZDQ1LWIyNmMtNTYyZDE3MDJhZDE1IiBzdEV2dDp3aGVuPSIyMDIwLTAzLTIxVDE3OjA2OjI4KzAzOjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjEuMCAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNvbnZlcnRlZCIgc3RFdnQ6cGFyYW1ldGVycz0iZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL3BuZyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iZGVyaXZlZCIgc3RFdnQ6cGFyYW1ldGVycz0iY29udmVydGVkIGZyb20gYXBwbGljYXRpb24vdm5kLmFkb2JlLnBob3Rvc2hvcCB0byBpbWFnZS9wbmciLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmE3NGZiYzY3LTVmMGItNWE0Ny1hOGM1LTZlYjdjNTZkNmFiOCIgc3RFdnQ6d2hlbj0iMjAyMC0wMy0yMVQxNzowNjoyOCswMzowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIxLjAgKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpjNDc0NTlmYy03Mzg0LTdkNDUtYjI2Yy01NjJkMTcwMmFkMTUiIHN0UmVmOmRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo4M2YyZWViYi0xZjEzLTY2NDItOGE3NS1lODExYmViY2ZjOGYiIHN0UmVmOm9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo1MmJjYzNhNC1jNjk4LTIyNDEtYmU5ZC03NjUwN2U1MjllNjgiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6+GBqUAAAGPklEQVR4nO3dz08TeRjH8ffMoMVNXEy6CSaaPbJ+D7vZCzEq/A16MjGrrsflxhEvXuXgYW969Fdi4s2L/wCoISRGF5Ovy1XNSgIJ7GGlSts9zLRM2wGRBzot83klHtrOJA/4ZmbolJmgXq8jslth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" )
	self.hookICO = Image.Create( AssetLocation.Base64, "iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAABN2lDQ1BBZG9iZSBSR0IgKDE5OTgpAAAokZWPv0rDUBSHvxtFxaFWCOLgcCdRUGzVwYxJW4ogWKtDkq1JQ5ViEm6uf/oQjm4dXNx9AidHwUHxCXwDxamDQ4QMBYvf9J3fORzOAaNi152GUYbzWKt205Gu58vZF2aYAoBOmKV2q3UAECdxxBjf7wiA10277jTG+38yH6ZKAyNguxtlIYgK0L/SqQYxBMygn2oQD4CpTto1EE9AqZf7G1AKcv8ASsr1fBBfgNlzPR+MOcAMcl8BTB1da4Bakg7UWe9Uy6plWdLuJkEkjweZjs4zuR+HiUoT1dFRF8jvA2AxH2w3HblWtay99X/+PRHX82Vun0cIQCw9F1lBeKEuf1UYO5PrYsdwGQ7vYXpUZLs3cLcBC7dFtlqF8hY8Dn8AwMZP/fNTP8gAAAAJcEhZcwAACxMAAAsTAQCanBgAAAiVaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0OCA3OS4xNjQwMzYsIDIwMTkvMDgvMTMtMDE6MDY6NTcgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnBob3Rvc2hvcD0iaHR0cDovL25zLmFkb2JlLmNvbS9waG90b3Nob3AvMS4wLyIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgMjEuMCAoV2luZG93cykiIHhtcDpDcmVhdGVEYXRlPSIyMDIwLTAzLTA4VDIyOjU4OjQ1KzAzOjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIwLTAzLTIxVDE3OjA2OjI4KzAzOjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMC0wMy0yMVQxNzowNjoyOCswMzowMCIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6YTc0ZmJjNjctNWYwYi01YTQ3LWE4YzUtNmViN2M1NmQ2YWI4IiB4bXBNTTpEb2N1bWVudElEPSJhZG9iZTpkb2NpZDpwaG90b3Nob3A6NmZiNjFiOWEtNDcyYy0yNDQ4LWI3ZGMtM2ZlZTMyNmY0YTY1IiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NTJiY2MzYTQtYzY5OC0yMjQxLWJlOWQtNzY1MDdlNTI5ZTY4IiBwaG90b3Nob3A6Q29sb3JNb2RlPSIzIj4gPHhtcE1NOkhpc3Rvcnk+IDxyZGY6U2VxPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iY3JlYXRlZCIgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo1MmJjYzNhNC1jNjk4LTIyNDEtYmU5ZC03NjUwN2U1MjllNjgiIHN0RXZ0OndoZW49IjIwMjAtMDMtMDhUMjI6NTg6NDUrMDM6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rvc2hvcCAyMS4wIChXaW5kb3dzKSIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YzQ3NDU5ZmMtNzM4NC03ZDQ1LWIyNmMtNTYyZDE3MDJhZDE1IiBzdEV2dDp3aGVuPSIyMDIwLTAzLTIxVDE3OjA2OjI4KzAzOjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjEuMCAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNvbnZlcnRlZCIgc3RFdnQ6cGFyYW1ldGVycz0iZnJvbSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL3BuZyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlvbj0iZGVyaXZlZCIgc3RFdnQ6cGFyYW1ldGVycz0iY29udmVydGVkIGZyb20gYXBwbGljYXRpb24vdm5kLmFkb2JlLnBob3Rvc2hvcCB0byBpbWFnZS9wbmciLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmE3NGZiYzY3LTVmMGItNWE0Ny1hOGM1LTZlYjdjNTZkNmFiOCIgc3RFdnQ6d2hlbj0iMjAyMC0wMy0yMVQxNzowNjoyOCswMzowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIxLjAgKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpjNDc0NTlmYy03Mzg0LTdkNDUtYjI2Yy01NjJkMTcwMmFkMTUiIHN0UmVmOmRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo4M2YyZWViYi0xZjEzLTY2NDItOGE3NS1lODExYmViY2ZjOGYiIHN0UmVmOm9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo1MmJjYzNhNC1jNjk4LTIyNDEtYmU5ZC03NjUwN2U1MjllNjgiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6+GBqUAAAGPklEQVR4nO3dz08TeRjH8ffMoMVNXEy6CSaaPbJ+D7vZCzEq/A16MjGrrsflxhEvXuXgYW969Fdi4s2L/wCoISRGF5Ovy1XNSgIJ7GGlSts9zLRM2wGRBzot83klHtrOJA/4ZmbolJmgXq8jslth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" )
	self.enabled = false
	self.alpha = 0
	self.size = 3
	self.popal = false
	self.defoult = false
	self.crosscolor = Color.White

	self.crosshairICO:SetSize( Vector2( Render.Height * 0.05, Render.Height * 0.05 ) )
	self.crosshairICO:SetPosition( Render.Size/2 - self.crosshairICO:GetSize()/2 )

	self.hookICO:SetSize( Vector2( Render.Height * 0.04, Render.Height * 0.04 ) )
	self.hookICO:SetPosition( Vector2.Zero - self.hookICO:GetSize()/2 )

	self.starttime = Timer()

	self.blacklist = {
		actions = { -- Actions to block while wingsuit is active
			[Action.LookUp] = false,
			[Action.LookDown] = false,
			[Action.LookLeft] = false,
			[Action.LookRight] = false
		},
		animations = { -- Disallow activation during these base states
			[AnimationState.SDead] = true,
		},
		animations2 = { -- Disallow activation during these base states
			[AnimationState.SReeledFireHook] = true,
			[AnimationState.SHangFireHook] = true,
			[AnimationState.SHitByGrapplinghook] = true,
			[AnimationState.SReeledWaitForHook] = true,
			[AnimationState.SRollLeft] = true,
			[AnimationState.SReelStart] = true,
			[AnimationState.SReelFlight] = true,
			[AnimationState.SSwimDiveNavigation] = true,
			[AnimationState.SSwimDiveIdle] = true,
			[AnimationState.SSwimDiveRotateCcw] = true,
			[AnimationState.SSwimDiveRotateCw] = true,
		},
		animations3 = { -- Disallow activation during these base states
			[AnimationState.SSkydive] = true,
			[AnimationState.SSkydiveDash] = true,
		}
	}

	Events:Subscribe( "GetOption", self, self.GetOption )
	Events:Subscribe( "ResolutionChange", self, self.ResolutionChange )
	Events:Subscribe( "Render", self, self.Render )
	Events:Subscribe( "EntityBulletHit", self, self.EntityBulletHit )
end

function Crosshair:GetOption( args )
	self.active = args.actCH
end

function Crosshair:EntityBulletHit( args )
	self.popalTimer = Timer()
	self.crosscolor = Color.Red
end

function Crosshair:ResolutionChange( args )
	self.crosshairICO:SetSize( Vector2( args.size.y * 0.05, args.size.y * 0.05 ) )
	self.crosshairICO:SetPosition( args.size/2 - self.crosshairICO:GetSize()/2 )

	self.hookICO:SetSize( Vector2( args.size.y * 0.04, args.size.y * 0.04 ) )
	self.hookICO:SetPosition( Vector2.Zero - self.hookICO:GetSize()/2 )
end

function Crosshair:Render()
	if not self.active then return end
	if self.popalTimer then
    	if self.popalTimer:GetSeconds() >= 0.1 then
    		self.crosscolor = Color.White
    		self.popalTimer = nil
    	end
	end
	if Game:GetState() ~= GUIState.Game then return end
	local bs = LocalPlayer:GetBaseState()
	local las = LocalPlayer:GetLeftArmState()
	if self.blacklist.animations[bs] then return end
	--self.size = Render.Height/400
	if not LocalPlayer:InVehicle() and not self.blacklist.animations2[bs] and LocalPlayer:GetEquippedSlot() <= 3 and not self.blacklist.animations3[bs] and not LocalPlayer:GetValue( "Passive" ) then
		--self.crosshairICO:Draw()
	end
	local pos_2d = Vector2( (Render.Width/2), (Render.Height/2) )

	local Transform = Transform2()
	local Rotation = self:GetRotation()
	Transform:Translate( pos_2d )
	Transform:Rotate( math.pi - 150 )
	Render:SetTransform( Transform )

	local velocity = -LocalPlayer:GetAngle() * LocalPlayer:GetLinearVelocity()
	self.velocity = -velocity.z
	local ray = Physics:Raycast( Camera:GetPosition(), Camera:GetAngle() * Vector3.Forward, 0, 1000 )
	if ray.distance < 83 and ray.distance > 1 then
		self.distance = ray.distance
		self.position = ray.position
		self.normal = ray.normal
	else
		self.distance = 0
	end

	if self.distance > 1 and (self.distance > 1 or (self.velocity > 20)) and not LocalPlayer:InVehicle() and not self.blacklist.animations2[bs] and not self.blacklist.animations2[las] then
		self.hookICO:SetAlpha( self.alpha )
		self.hookICO:Draw()
	end

	Game:FireEvent( "gui.aim.hide" )
	if not self.blacklist.animations2[bs] then
		Render:FillCircle( Vector2(), self.size/2, self.crosscolor )
		Render:DrawCircle( Vector2(), self.size/2, Color.Black )
	end
end

function Crosshair:GetRotation()
	if self.starttime:GetSeconds() < 1 then
		self.alpha = 255 + self.starttime:GetSeconds()
	else
		self.alpha = 1 - self.starttime:GetSeconds()
	end
	if self.starttime:GetSeconds() > 2 then
		self.starttime:Restart()
		self.alpha = 255
	end
end

crosshair = Crosshair()